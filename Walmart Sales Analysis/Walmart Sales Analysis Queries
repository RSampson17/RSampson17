/*A. Generic Questions*/
/*How many unique cities does the data have?*/

SELECT COUNT(DISTINCT city), city
FROM Walmart;

/*In which city is each branch?*/

SELECT branch, city
FROM Walmart
GROUP BY branch, city;

/*B. Product-related questions*/
/*How many unique product lines does the data have?*/

SELECT COUNT(DISTINCT product_line)
FROM Walmart;

/*What is the most common payment method?*/

SELECT COUNT(payment) as Count, payment
FROM Walmart
GROUP BY payment
ORDER BY Count desc LIMIT 1;

/*What is the most selling product line?*/

SELECT product_line, quantity
FROM Walmart
GROUP BY product_line
ORDER BY quantity desc LIMIT 1;


/*ADD COLUMN NAMED "MONTH_NAME"*/

ALTER TABLE Walmart ADD COLUMN month_name VARCHAR(10);

UPDATE Walmart
SET month_name = 
    CASE 
        WHEN CAST(SUBSTR(date, 6, 2) AS INTEGER) = 1 THEN 'January'
        WHEN CAST(SUBSTR(date, 6, 2) AS INTEGER) = 2 THEN 'February'
        WHEN CAST(SUBSTR(date, 6, 2) AS INTEGER) = 3 THEN 'March'
        WHEN CAST(SUBSTR(date, 6, 2) AS INTEGER) = 4 THEN 'April'
        WHEN CAST(SUBSTR(date, 6, 2) AS INTEGER) = 5 THEN 'May'
        WHEN CAST(SUBSTR(date, 6, 2) AS INTEGER) = 6 THEN 'June'
        WHEN CAST(SUBSTR(date, 6, 2) AS INTEGER) = 7 THEN 'July'
        WHEN CAST(SUBSTR(date, 6, 2) AS INTEGER) = 8 THEN 'August'
        WHEN CAST(SUBSTR(date, 6, 2) AS INTEGER) = 9 THEN 'September'
        WHEN CAST(SUBSTR(date, 6, 2) AS INTEGER) = 10 THEN 'October'
        WHEN CAST(SUBSTR(date, 6, 2) AS INTEGER) = 11 THEN 'November'
        WHEN CAST(SUBSTR(date, 6, 2) AS INTEGER) = 12 THEN 'December'
        ELSE NULL
    END;

/*What is the total revenue by month?*/

SELECT month_name, SUM(unit_price * quantity) as Revenue
FROM Walmart
GROUP BY month_name;

/*What month had the largest COGS?*/

SELECT SUM(cogs) as Total_cogs, month_name
FROM Walmart
GROUP BY month_name
ORDER BY Total_cogs desc LIMIT 1;

/*What product line had the largest revenue?*/

SELECT product_line, SUM(unit_price * quantity) as Revenue
FROM Walmart
GROUP BY product_line
ORDER BY Revenue desc LIMIT 1;

/*What is the city with the largest revenue?*/

SELECT city, SUM(unit_price * quantity) as Revenue
FROM Walmart
GROUP BY city
ORDER BY Revenue desc LIMIT 1;

/*What product line had the largest VAT?*/

SELECT product_line, SUM(vat) AS Total_VAT
FROM Walmart
GROUP BY product_line
ORDER BY Total_VAT desc LIMIT 1;


/*Fetch each product line and add a column to those product line showing "Good", "Bad". Good if its greater than average sales*/

ALTER TABLE Walmart ADD COLUMN revenue_grade VARCHAR(10);

UPDATE Walmart
SET revenue_grade =
    CASE WHEN  (SELECT SUM(unit_price * quantity)FROM Walmart) > (SELECT AVG(unit_price * quantity)FROM Walmart)  THEN "Good" 
    ELSE "Bad"
    END;

SELECT product_line,
    CASE WHEN  SUM(unit_price * quantity) > AVG(unit_price * quantity)  THEN "Good" 
    ELSE "Bad"
    END AS Revenue_Grade
FROM Walmart
GROUP BY product_line;


/*Which branch sold more products than average product sold?*/

SELECT branch,COUNT(quantity), ROUND(AVG(quantity),2)
FROM Walmart
GROUP BY branch
HAVING COUNT(quantity) > AVG(quantity)
ORDER BY COUNT(QUANTITY) DESC LIMIT 1;

/*What is the most common product line by gender?*/

SELECT product_line, COUNT(quantity) AS quantity_total, gender
FROM Walmart
GROUP BY product_line, gender
ORDER BY quantity_total desc;

/*What is the average rating of each product line?*/

SELECT product_line, ROUND(AVG(rating),2) as avg_rating
FROM Walmart
GROUP BY product_line
ORDER BY avg_rating desc;

/*C. Customer-related questions
/*How many unique customer types does the data have?*/

SELECT COUNT(DISTINCT(customer_type)) as count_customer_type
FROM Walmart;


/*How many unique payment methods does the data have?*/

SELECT COUNT(DISTINCT(payment)) as count_payment_method
FROM Walmart;


/*What is the most common customer type?*/

SELECT customer_type, COUNT(customer_type)
FROM Walmart
GROUP BY customer_type;

/*Which customer type buys the most?*/

SELECT customer_type, SUM(quantity)
FROM Walmart
GROUP BY customer_type
ORDER BY SUM(quantity) desc;

/*What is the gender of most of the customers?*/

SELECT COUNT(gender), gender
FROM Walmart
GROUP BY gender;


/*What is the gender distribution per branch?*/

SELECT branch, gender, COUNT(gender)
FROM Walmart
GROUP BY branch,gender
ORDER BY branch;

/*ADD COLUMN FOR TIME OF DAY*/

ALTER TABLE Walmart ADD COLUMN time_of_day VARCHAR(20);

UPDATE Walmart
SET time_of_day = (
	CASE 
		WHEN `time` BETWEEN "00:00:00" AND "12:00:00" THEN "Morning"
		WHEN `time` BETWEEN "12:01:00" AND "16:00:00" THEN "Afternoon"
		ELSE "Evening" 
	END
);

SELECT time,
(CASE 
	WHEN `time` BETWEEN "00:00:00" AND "12:00:00" THEN "Morning"
	WHEN `time` BETWEEN "12:01:00" AND "16:00:00" THEN "Afternoon"
	ELSE "Evening" 
END) AS time_of_day
FROM Walmart;

/*Which time of the day do customers give most ratings?*/

SELECT time_of_day, COUNT(rating) AS Count_Rating
FROM Walmart
GROUP BY time_of_day
ORDER BY time_of_day;

/*Which time of the day do customers give most ratings per branch?*/

SELECT time_of_day, branch, COUNT(rating) AS Count_Rating
FROM Walmart
GROUP BY time_of_day, branch
ORDER BY Count_Rating desc;


/*ADD COLUMN NAMED "DAY_OF_WEEK"*/

ALTER TABLE Walmart
ADD COLUMN day_name VARCHAR(20);

UPDATE Walmart
SET day_name = 
    CASE 
        WHEN strftime('%w', date) = '0' THEN 'Sunday'
        WHEN strftime('%w', date) = '1' THEN 'Monday'
        WHEN strftime('%w', date) = '2' THEN 'Tuesday'
        WHEN strftime('%w', date) = '3' THEN 'Wednesday'
        WHEN strftime('%w', date) = '4' THEN 'Thursday'
        WHEN strftime('%w', date) = '5' THEN 'Friday'
        WHEN strftime('%w', date) = '6' THEN 'Saturday'
    END;

/*Which day of the week has the best avg ratings?*/

SELECT day_name, AVG(rating)
FROM Walmart
GROUP BY day_name
ORDER BY AVG(rating) desc LIMIT 1;


/*Which day of the week has the best average ratings per branch?*/

SELECT day_name, branch, AVG(rating)
FROM Walmart
GROUP BY day_name, branch
ORDER BY AVG(rating) desc, branch;


/*D. Sales-related questions
/*Number of sales made in each time of the day per weekday*/

SELECT time_of_day, day_name, COUNT(total) as Number_of_sales
FROM Walmart
GROUP BY time_of_day, day_name
ORDER BY day_name;

/*Which of the customer types brings the most revenue?*/

SELECT customer_type, SUM(quantity * unit_price) AS Revenue
FROM Walmart
GROUP BY customer_type
ORDER BY Revenue desc;

